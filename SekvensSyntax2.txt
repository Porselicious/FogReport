@startuml

actor Admin
boundary index.jsp
boundary adminpage.jsp
boundary reviewpage.jsp

control FrontController

entity HTMLGenerator
entity SVGGenerator
entity LogicFacade
entity CreateCarport
entity DBFacade
entity OrderMapper
entity MaterialMapper

database Database

Admin -> index.jsp : user selects 'Adminpage' from topmenu
index.jsp -> FrontController : Command 'Adminpage'
FrontController -> LogicFacade : getAllOrders()
LogicFacade -> DBFacade : getAllOrders()
DBFacade -> OrderMapper : getAllOrders()
OrderMapper -> Database : getAllOrders()
Database --> OrderMapper : return Orders
OrderMapper --> DBFacade : return Orders
DBFacade --> LogicFacade : return Orders
LogicFacade -> HTMLGenerator : return Orders
activate HTMLGenerator
HTMLGenerator -> FrontController : showAllOrders(Orders)
deactivate HTMLGenerator
FrontController --> adminpage.jsp : return adminpage.jsp
adminpage.jsp -> FrontController : Command 'ReviewOrder'
FrontController -> LogicFacade : getOrderByOrderID()
LogicFacade -> DBFacade : getOrderByOrderID()
DBFacade -> OrderMapper : getOrderByOrderID()
OrderMapper -> Database : getOrderByOrderID()
Database --> OrderMapper : return Order
OrderMapper --> DBFacade : return Order
DBFacade --> LogicFacade : return Order
LogicFacade -> CreateCarport : createCarport(Order)
activate CreateCarport
CreateCarport -> DBFacade : getMaterials()
DBFacade -> MaterialMapper : getMaterials()
MaterialMapper -> Database : getMaterials()
Database --> MaterialMapper : return materials
MaterialMapper --> DBFacade : return materials
DBFacade --> CreateCarport : return materials
CreateCarport --> LogicFacade : calculateOrder()
deactivate CreateCarport
LogicFacade --> FrontController : return Order
FrontController -> SVGGenerator : carport sketch is created from Order
activate HTMLGenerator
activate SVGGenerator
SVGGenerator --> FrontController
deactivate HTMLGenerator
deactivate SVGGenerator
FrontController --> reviewpage.jsp : return reviewpage.jsp
reviewpage.jsp -> FrontController : Command 'UpdateOrder'
FrontController -> LogicFacade : editOrderPrice()
FrontController -> LogicFacade : editOrderStatus()
LogicFacade -> DBFacade : editOrderPrice()
LogicFacade -> DBFacade : editOrderStatus()
DBFacade -> OrderMapper : editOrderPrice()
DBFacade -> OrderMapper : editOrderStatus()
OrderMapper -> Database : Order is updated in database


@enduml
